@model EcommerceProject.Models.Usuario

@{
    ViewBag.Title = "Modificar Datos de Usuario";

    String[] tipoDeIdentificacion = new String[] { "DNI", "CUIT", "CUIL" };

    ViewBag.tipoDeIdentificacion = tipoDeIdentificacion;
}

<div style="margin-top: 10px">
    <h2>@ViewBag.Title</h2>
    <hr />
    <div class="flex-rectangle center color"><h4>PUBLICIDAD</h4></div>
    <hr />
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="col-md-8 col-xs-12" style="margin-top: 10px">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @if (ViewBag.Message != null)
        {
            <div class="form-group">
                <div class="col-md-8">
                    @ViewBag.Message
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", type = "text", required = "required" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control", type = "text", required = "required" } })
                @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoDocumento, htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-8">
                <select class="form-control" , name="TipoDeIdentificacion">
                    @if (Model.TipoDocumento != null)
                    {
                        <option value="" disabled>Seleccione una opción...</option>
                    }
                    else
                    {
                        <option value="" selected disabled>Seleccione una opción...</option>
                    }

                    @foreach (var tipo in ViewBag.tipoDeIdentificacion)
                    {
                        if (tipo == Model.TipoDocumento)
                        {
                            <option value="@tipo" selected>@tipo</option>
                        }
                        else
                        {
                            <option value="@tipo">@tipo</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Documento, htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Documento, new { htmlAttributes = new { @class = "form-control", type = "number", min = "1" } })
                @Html.ValidationMessageFor(model => model.Documento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaDeNacimiento, htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FechaDeNacimiento, new { htmlAttributes = new { @class = "form-control", type = "date", min = "1920-01-01", max = "2001-12-31", required = "required" } })
                @Html.ValidationMessageFor(model => model.FechaDeNacimiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", type = "number", min = "1", required = "required" } })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email", required = "required" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Guardar Cambios" class="btn btn-primary" />
                <a href="@Url.Action("UserInfo", "Account")" class="btn btn-secondary">Descartar Cambios</a>
            </div>
        </div>
    </div>
}