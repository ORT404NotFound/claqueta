@model EcommerceProject.Models.Usuario

@{
    ViewBag.Title = "Accede a Tu Cuenta";
}

<div style="margin-top: 10px">
    <h2>@ViewBag.Title</h2>
    <hr />
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="col-md-8 col-xs-12" style="margin-top: 10px">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = @"^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$", title = "Ingrese un E-Mail válido." } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", required = "required", pattern = @"^(?=.*[a-z])(?=.*\d)(?=.*[^\da-zA-Z]).{8,15}$", title = "Debe contener un número, una letra y un caracter especial. Longitud: 8 a 15 caracteres." } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Ingresar" class="btn btn-primary" />
            </div>
        </div>

        <label class="col-md-8 col-form-label col-form-label-sm">¿Todavía no estás registrado? Ingresá <a href="@Url.Action("Register","Account")">acá</a>.</label>
    </div>
}